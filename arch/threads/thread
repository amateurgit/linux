    创建
        /* thread : 线程标识;  attr: 线程属性, 微调线程行为; start_routine : 启动例程;  arg : 启动例程的参数 */
        /*  线程属性:
	 *      setdetachstate/getdetachstate : 创建时, 使线程处于 JOINABLE 或 DETACHED 状态 
	 *      setguardsize/getguardsize     : 控制线程栈末尾之后以避免栈溢出的扩展内存大小, 系统默认值为内存页大小
	 *      setstack/getstack             : 设置/获取 线程栈地址和大小
	 *      setstacksize/getstacksize     : 设置/获取 线程栈大小
         */
        int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
                           void *(*start_routine) (void *), void *arg);


     .
     .
     .
     .
     .
     .


     同步
     	互斥锁
	读写锁
	自旋锁
	条件变量
	屏障

     .
     .
     .
     .
     .
     .


    消亡
        终止方式
	    执行完逻辑自然退出    pthread_exit   pthread_cancel 	
        获取终止状态
	    pthread_join
	线程退出清理处理程序
	    pthread_cleanup_push/pthread_cleanup_pop









属性对象模型

    不同的性 关联 不同的对象
    对象初始化
    对象反初始化
    对象获取
    对象设置
