计算机启动流程:

    上电
    
     |
     V
    BIOS
        固化到 ROM 芯片的程序, 计算机上电后首先执行它。

	硬件自检(Power-On Self-Test)
	启动顺序(Boot Sequence) —— 确定操作系统所在的存储设备
	    按顺序读取存储设备信息, 找到可以启动的设备(有主引导记录的设备, 即第一扇区最后两个字节是:0x55和0xAA)
     |
     V
   主引导记录(Master boot record) —— 确定操作系统所在的分区(被激活的分区)
	共 512 字节, 三部分组成
			1-446字节   : 调用操作系统的机器码;
	   		447-510字节 : 分区表
				共 64 字节, 分为 4 项目, 每一项 16 个字节, 描述一个分区, 最多分 4 个一级分区, 即主分区
				第 1 个字节 : 标识分区是否激活(0x80 表示激活, 4 个主分区只能有一个激活 )
				第 2-4 字节 : 主分区第一扇区的物理位置(柱面、磁头、扇区号等等)
				第 5 个字节 : 主分区类型
				第 6-8 字节 : 主分区最后一个扇区的物理位置
				第 9-12 字节: 主分区第一个扇区的逻辑地址
				第 13-16字节: 主分区扇区总数(分区大小上限 : 2^32 * 512B = 2T)

			511-512字节 : 主引导记录签名(0x55和0xAA)
     |
     V
   (确定操作系统在分区的地址)
	卷引导记录(Volume boot record) —— 读取激活分区的第一扇区, 获取操作系统的地址
	扩展分区和逻辑分区
		四个主分区, 只有一个区可被定义成扩展分区;
		扩展分区可分区为逻辑分区;
		扩展分区的第一扇区也包含一张 64 字节的分区表, 但最多只有两项(一个描述本身的逻辑分区, 一个描述下一逻辑分区的位置, 就像一个链表)
	启动管理器
		计算机读取"主引导记录"前面446字节的机器码之后，不再把控制权转交给某一个分区，而是运行事先安装的"启动管理器"（boot loader），由用户选择启动哪一个操作系统
     |
     V



   内核代码载入内存
     |
     V
   平台相关机器码(汇i编)
      vmlinux.lds 内核链接脚本, 指明了内核的入口
      head.S 入口文件
     |
     V
   平台无关的代码(C)
      入口 init/main.c : start_kernel





